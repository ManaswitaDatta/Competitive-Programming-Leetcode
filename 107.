/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> result = new ArrayList<>();
    private int height(TreeNode root){
        if(root == null) return 0;
        return 1 + Math.max(height(root.left), height(root.right));
    }
    private void levelOrder(TreeNode root, int height){
        if(root == null)
            return;
        result.get(height).add(root.val);
        levelOrder(root.left, height - 1);
        levelOrder(root.right, height - 1);
        
    }
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        int h = height(root);
        int i = 0;
        while(i++ < h)
            result.add(new ArrayList<>());
        levelOrder(root,h-1);
        return result;
    }
}
