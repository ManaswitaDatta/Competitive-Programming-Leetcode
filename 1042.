class Solution {
    public int[] gardenNoAdj(int N, int[][] paths) {
        int[] output = new int[N];
        int[] flowerAdded = new int[4];
        int[][] allPaths = new int[N][3];
        
        for(int i = 0; i < paths.length; i++){
            int x = paths[i][0];
            int y = paths[i][1];
            int h = 0;
            while(allPaths[x-1][h] != 0) h++;
            allPaths[x-1][h] = y;
            h = 0;
            while(allPaths[y-1][h] != 0) h++;
            allPaths[y-1][h] = x;
        }
        for(int i = 0; i < N; i++){
            int key = i + 1;
            if(output[i] == 0){
                Arrays.fill(flowerAdded, 0);
                for(int j = 0; j < 3; j++){
                    if(allPaths[i][j] !=  0 && output[allPaths[i][j]-1] != 0)
                        flowerAdded[output[allPaths[i][j]-1] - 1] = 1;
                }
            for(int k = 0; k < 4; k++)
                if(flowerAdded[k] == 0){
                    output[key-1] = k+1;
                    flowerAdded[k] = 1;
                    break;
                }   
            }
        }
        for(int i = 0; i < N; i++)
            if(output[i] == 0){
                output[i] = 1;   
            }
        return output;
    }
}
