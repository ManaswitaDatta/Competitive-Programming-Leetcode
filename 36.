class Solution {
    public boolean isValidSudoku(char[][] board) {
        for(int i = 0; i < 9; i++){
            HashSet<Character> row = new HashSet<>(), col = new HashSet<>();
            for(int j = 0; j < 9; j++){
                if(board[i][j] != '.') 
                    if(row.contains(board[i][j])) return false;
                    else row.add(board[i][j]);
                if(board[j][i] != '.') 
                    if(col.contains(board[j][i])) return false;
                    else col.add(board[j][i]);
                
            }
        }
        
        for(int i = 0; i < 9; i+= 3){
            for(int j = 0; j < 9; j+= 3){
            HashSet<Character> set = new HashSet<>();
            for(int k = i; k < i+3; k++)
            for(int h = j; h < j+3; h++){
                if(board[k][h] != '.') 
                    if(set.contains(board[k][h])) return false;
                    else set.add(board[k][h]);
            }
            //System.out.print(i+" "+j);
            }
        }
        return true;
    }
}
