 private int find(int[] nums, int s, int e){
        int n = e-s+1;
        if(n == 1) return nums[s];
        if(n == 2) return Math.max(nums[s], nums[e]);
        int prev3 = nums[s], prev2 = nums[s+1], prev1 = Math.max(nums[s+2]+prev3, prev2);
        for(int i = s+3; i <= e; i++){
            int curr = nums[i] + Math.max(prev3, prev2);
            prev3 = prev2;
            prev2 = prev1;
            prev1 = curr;
        }
        return Math.max(prev1, prev2);
    }
    public int rob(int[] nums) {
        int n = nums.length;
        if(n == 0) return 0;
        if(n == 1) return nums[0];
        
        return Math.max(find(nums, 0, n-2), find(nums, 1, n-1));
    }
}
